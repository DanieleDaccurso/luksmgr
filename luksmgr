#!/bin/sh

# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS “AS IS”
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
# OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
# EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

preRequisites ( )
{
  cryptsetup --version >/dev/null 2>&1 || {
    echo "cryptsetup is required to run this. Exiting"
    exit 1
  }

  if [ "`whoami`" != "root" ]; then
    sudo --version >/dev/null 2>&1 || {
      echo "you must run luksmgr as root"
      exit 1
    }
    echo "$*"
    sudo sh $0 $*
    exit
  fi

  if [ ! -d "/opt/luksmgr" ]; then
    mkdir -p /opt/luksmgr
  fi
}

complainArguments ( )
{
  >&2 echo "ILLEGAL NUMBER OF ARGUMENTS PASSED"
  showHelp
  exit
}

showHelp ( )
{
  cat <<EOF
WORK IN PROGRESS

luksmgr, an easy utility to manage encrypted containers
Usage: luksmgr [command [...options]]

  commands:
      create (name, size, [pass])
        creates a new container
            - name    A name, must be valid as a filename
            - size    Container size in MB
            - pass    Optional, passphrase to encrypt the container.
                      If ommitted, passphrase will be prompted.

      mount (name, path, [pass])
        mounts a container
            - name    Name of the container
            - path    Path to mount (must be folder and empty)
            - pass    Optional, passphrase to decrypt the container.
                      if ommitted, passphrase will be prompted.

Copyright: (c) 2017 Daniele D'Accurso <daniele@daccurso.net>
This utility is distributed under the BSD license

For issues, visit: https://github.com/danieledaccurso/luksmgr
EOF
}

lmgrCreate ( )
{
  if (( $# != 3 && $# != 4 )); then
   complainArguments
  fi
  name=$2
  size=$3
  pass=$4
  if (( $# == 3)); then
    echo -n "Passphrase for encryption (will not echo): "
    read -s pass1
    echo
    echo -n "Confirm: "
    read -s pass2
    echo
    if [ "$pass1" != "$pass2" ]; then
      echo "Passwords did not match, try again"
      lmgrCreate $*
      exit 0
    fi
  fi
  file=/opt/luksmgr/$name

  touch $file
  dd if=/dev/urandom of=$file bs=1M count=$size
  echo $pass | cryptsetup -c aes-xts-plain64 -s 512 -h sha512 luksFormat $file
  echo $pass | cryptsetup luksOpen $file $name

  mkfs.ext4 /dev/mapper/$name

  cryptsetup luksClose $name
}

lmgrOpen ( )
{
  if (( $# != 3 && $# != 4 )); then
   complainArguments
  fi
  name=$2
  path=$3
  pass=$4
  if (( $# == 3)); then
    echo -n "Passphrase for encryption (will not echo): "
    read -s pass
    echo
  fi
  file=/opt/luksmgr/$name
  cryptsetup luksOpen $file $name
  sudo mount -t ext4 /dev/mapper/$name $path
}

preRequisites $*

case "$1" in
  "create")
    lmgrCreate $*
  ;;
  "open")
    lmgrOpen $*
  ;;
  "expand") echo "expand"
  ;;

  *)
   showHelp
  ;;
esac
